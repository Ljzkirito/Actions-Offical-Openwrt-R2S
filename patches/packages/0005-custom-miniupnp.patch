From fe3c2dbdb54380bde0ed8c166f16d678aedba3fe Mon Sep 17 00:00:00 2001
From: Ljzkirito <Kirito.ljz@outlook.com>
Date: Tue, 20 Apr 2021 12:31:18 +0800
Subject: [PATCH] Custom miniupnp

remove ipv6 and igdv1
remove reserved addresses
---
 net/miniupnpd/Makefile                        |   4 +-
 net/miniupnpd/files/miniupnpd.init            |   7 --
 net/miniupnpd/files/upnpd.config              |   2 -
 .../patches/301-ext_ip_reserved_ignore.patch  | 110 ------------------
 .../400-remove-some-reserved-addresses.patch  |  37 ++++++
 5 files changed, 38 insertions(+), 122 deletions(-)
 delete mode 100644 net/miniupnpd/patches/301-ext_ip_reserved_ignore.patch
 create mode 100644 net/miniupnpd/patches/400-remove-some-reserved-addresses.patch

diff --git a/net/miniupnpd/Makefile b/net/miniupnpd/Makefile
index b597b596f96c..3181554c50af 100644
--- a/net/miniupnpd/Makefile
+++ b/net/miniupnpd/Makefile
@@ -29,7 +29,7 @@ include $(INCLUDE_DIR)/version.mk
 define Package/miniupnpd
   SECTION:=net
   CATEGORY:=Network
-  DEPENDS:=+iptables +libip4tc +IPV6:libip6tc +IPV6:ip6tables +libuuid +libcap-ng
+  DEPENDS:=+iptables +libip4tc +libuuid +libcap-ng
   TITLE:=Lightweight UPnP IGD, NAT-PMP & PCP daemon
   SUBMENU:=Firewall
   URL:=https://miniupnp.tuxfamily.org/
@@ -45,8 +45,6 @@ define Build/Prepare
 endef
 
 CONFIGURE_ARGS = \
-	$(if $(CONFIG_IPV6),--ipv6) \
-	--igd2 \
 	--leasefile \
 	--portinuse \
 	--firewall=iptables \
diff --git a/net/miniupnpd/files/miniupnpd.init b/net/miniupnpd/files/miniupnpd.init
index a37c5e8a7346..4ed84e883600 100644
--- a/net/miniupnpd/files/miniupnpd.init
+++ b/net/miniupnpd/files/miniupnpd.init
@@ -61,8 +61,6 @@ upnpd() {
 	local upload download log_output port config_file serial_number model_number
 	local use_stun stun_host stun_port uuid notify_interval presentation_url
 	local upnp_lease_file clean_ruleset_threshold clean_ruleset_interval
-	local ipv6_disable
-	local ext_ip_reserved_ignore
 
 	local enabled
 	config_get_bool enabled config enabled 1
@@ -89,8 +87,6 @@ upnpd() {
 	config_get upnp_lease_file config upnp_lease_file
 	config_get clean_ruleset_threshold config clean_ruleset_threshold
 	config_get clean_ruleset_interval config clean_ruleset_interval
-	config_get ipv6_disable config ipv6_disable 0
-	config_get ext_ip_reserved_ignore config ext_ip_reserved_ignore 0
 
 	local conf ifname ifname6
 
@@ -140,10 +136,7 @@ upnpd() {
 		upnpd_write_bool enable_upnp 1
 		upnpd_write_bool secure_mode 1
 		upnpd_write_bool system_uptime 1
-		upnpd_write_bool igdv1 0 force_igd_desc_v1
 		upnpd_write_bool use_stun 0 ext_perform_stun
-		upnpd_write_bool ipv6_disable $ipv6_disable
-		upnpd_write_bool ext_ip_reserved_ignore $ext_ip_reserved_ignore
 
 		[ "$use_stun" -eq 0 ] || {
 			[ -n "$stun_host" ] && echo "ext_stun_host=$stun_host"
diff --git a/net/miniupnpd/files/upnpd.config b/net/miniupnpd/files/upnpd.config
index 7c408683c833..a3481c9a01ce 100644
--- a/net/miniupnpd/files/upnpd.config
+++ b/net/miniupnpd/files/upnpd.config
@@ -11,8 +11,6 @@ config upnpd config
 	option internal_iface	lan
 	option port		5000
 	option upnp_lease_file	/var/run/miniupnpd.leases
-	option igdv1		1
-	option ext_ip_reserved_ignore '1'
 
 config perm_rule
 	option action		allow
diff --git a/net/miniupnpd/patches/301-ext_ip_reserved_ignore.patch b/net/miniupnpd/patches/301-ext_ip_reserved_ignore.patch
deleted file mode 100644
index 55551eb301c5..000000000000
--- a/net/miniupnpd/patches/301-ext_ip_reserved_ignore.patch
+++ /dev/null
@@ -1,110 +0,0 @@
-commit cb046cfef1d6b954d3fc09f09a1fc3a7ffeb7593
-Author: Chen Minqiang <ptpt52@gmail.com>
-Date:   Sun Jul 5 10:42:52 2020 +0800
-
-    options: ext_ip_reserved_ignore support
-    
-    This make the port forwarding force to work even
-    when the router is behind NAT
-    
-    Signed-off-by: Chen Minqiang <ptpt52@gmail.com>
-
---- a/getifaddr.c
-+++ b/getifaddr.c
-@@ -25,6 +25,7 @@
- #if defined(USE_GETIFADDRS) || defined(ENABLE_IPV6) || defined(ENABLE_PCP)
- #include <ifaddrs.h>
- #endif
-+#include "upnpglobalvars.h"
- 
- int
- getifaddr(const char * ifname, char * buf, int len,
-@@ -295,6 +296,11 @@ addr_is_reserved(struct in_addr * addr)
- 	uint32_t address = ntohl(addr->s_addr);
- 	size_t i;
- 
-+	if(GETFLAG(EXTIPRESERVEDIGNOREMASK)) {
-+		syslog(LOG_NOTICE, "private/reserved address checking is ignore");
-+		return 0;
-+	}
-+
- 	for (i = 0; i < sizeof(reserved)/sizeof(reserved[0]); ++i) {
- 		if ((address >> reserved[i].rmask) == (reserved[i].address >> reserved[i].rmask))
- 			return 1;
---- a/miniupnpd.c
-+++ b/miniupnpd.c
-@@ -1225,6 +1225,10 @@ init(int argc, char * * argv, struct run
- 			case UPNPEXT_IP:
- 				use_ext_ip_addr = ary_options[i].value;
- 				break;
-+			case UPNPEXT_IP_RESERVED_IGNORE:
-+				if(strcmp(ary_options[i].value, "yes") == 0)
-+					SETFLAG(EXTIPRESERVEDIGNOREMASK);
-+				break;
- 			case UPNPEXT_PERFORM_STUN:
- 				if(strcmp(ary_options[i].value, "yes") == 0)
- 					SETFLAG(PERFORMSTUNMASK);
---- a/miniupnpd.conf
-+++ b/miniupnpd.conf
-@@ -9,6 +9,8 @@
- # Setting ext_ip is also useful in double NAT setup, you can declare here
- # the public IP address.
- #ext_ip=
-+#ignore even if ext_ip is reserved: default is no
-+#ext_ip_reserved_ignore=yes
- # WAN interface must have public IP address. Otherwise it is behind NAT
- # and port forwarding is impossible. In some cases WAN interface can be
- # behind unrestricted NAT 1:1 when all incoming traffic is NAT-ed and
---- a/options.c
-+++ b/options.c
-@@ -34,6 +34,7 @@ static const struct {
- 	{ UPNPEXT_IFNAME6, "ext_ifname6" },
- #endif
- 	{ UPNPEXT_IP,	"ext_ip" },
-+	{ UPNPEXT_IP_RESERVED_IGNORE, "ext_ip_reserved_ignore" },
- 	{ UPNPEXT_PERFORM_STUN, "ext_perform_stun" },
- 	{ UPNPEXT_STUN_HOST, "ext_stun_host" },
- 	{ UPNPEXT_STUN_PORT, "ext_stun_port" },
---- a/options.h
-+++ b/options.h
-@@ -21,6 +21,7 @@ enum upnpconfigoptions {
- 	UPNPEXT_IFNAME6,		/* ext_ifname6 */
- #endif
- 	UPNPEXT_IP,				/* ext_ip */
-+	UPNPEXT_IP_RESERVED_IGNORE, /* ignore if ext_ip is reserved */
- 	UPNPEXT_PERFORM_STUN,		/* ext_perform_stun */
- 	UPNPEXT_STUN_HOST,		/* ext_stun_host */
- 	UPNPEXT_STUN_PORT,		/* ext_stun_port */
---- a/testgetifaddr.c
-+++ b/testgetifaddr.c
-@@ -13,6 +13,8 @@
- #include "config.h"
- #include "getifaddr.h"
- 
-+int runtime_flags = 0;
-+
- #if defined(__sun)
- /* solaris 10 does not define LOG_PERROR */
- #define LOG_PERROR 0
---- a/testportinuse.c
-+++ b/testportinuse.c
-@@ -14,6 +14,8 @@
- #include "config.h"
- #include "portinuse.h"
- 
-+int runtime_flags = 0;
-+
- int main(int argc, char * * argv)
- {
- #ifndef CHECK_PORTINUSE
---- a/upnpglobalvars.h
-+++ b/upnpglobalvars.h
-@@ -84,6 +84,8 @@ extern int runtime_flags;
- 
- #define PERFORMSTUNMASK    0x1000
- 
-+#define EXTIPRESERVEDIGNOREMASK 0x2000
-+
- #define SETFLAG(mask)	runtime_flags |= mask
- #define GETFLAG(mask)	(runtime_flags & mask)
- #define CLEARFLAG(mask)	runtime_flags &= ~mask
diff --git a/net/miniupnpd/patches/400-remove-some-reserved-addresses.patch b/net/miniupnpd/patches/400-remove-some-reserved-addresses.patch
new file mode 100644
index 000000000000..43b1a935d6ae
--- /dev/null
+++ b/net/miniupnpd/patches/400-remove-some-reserved-addresses.patch
@@ -0,0 +1,37 @@
+From baad51bbb821e7208dc7fecb4c8457222ec905df Mon Sep 17 00:00:00 2001
+From: Ljzkirito <2693664168@qq.com>
+Date: Tue, 16 Mar 2021 15:30:28 +0800
+Subject: [PATCH] Keep only a few reserved addresses
+
+---
+ getifaddr.c | 14 --------------
+ 1 file changed, 14 deletions(-)
+
+diff --git a/getifaddr.c b/getifaddr.c
+index 00f1aa5..9d65d1f 100644
+--- a/getifaddr.c
++++ b/getifaddr.c
+@@ -268,23 +268,9 @@ find_ipv6_addr(const char * ifname,
+ #define MSK(m) (32-(m))
+ static const struct { uint32_t address; uint32_t rmask; } reserved[] = {
+ 	{ IP(  0,   0,   0, 0), MSK( 8) }, /* RFC1122 "This host on this network" */
+-	{ IP( 10,   0,   0, 0), MSK( 8) }, /* RFC1918 Private-Use */
+-	{ IP(100,  64,   0, 0), MSK(10) }, /* RFC6598 Shared Address Space */
+ 	{ IP(127,   0,   0, 0), MSK( 8) }, /* RFC1122 Loopback */
+ 	{ IP(169, 254,   0, 0), MSK(16) }, /* RFC3927 Link-Local */
+-	{ IP(172,  16,   0, 0), MSK(12) }, /* RFC1918 Private-Use */
+-	{ IP(192,   0,   0, 0), MSK(24) }, /* RFC6890 IETF Protocol Assignments */
+-	{ IP(192,   0,   2, 0), MSK(24) }, /* RFC5737 Documentation (TEST-NET-1) */
+-	{ IP(192,  31, 196, 0), MSK(24) }, /* RFC7535 AS112-v4 */
+-	{ IP(192,  52, 193, 0), MSK(24) }, /* RFC7450 AMT */
+-	{ IP(192,  88,  99, 0), MSK(24) }, /* RFC7526 6to4 Relay Anycast */
+ 	{ IP(192, 168,   0, 0), MSK(16) }, /* RFC1918 Private-Use */
+-	{ IP(192, 175,  48, 0), MSK(24) }, /* RFC7534 Direct Delegation AS112 Service */
+-	{ IP(198,  18,   0, 0), MSK(15) }, /* RFC2544 Benchmarking */
+-	{ IP(198,  51, 100, 0), MSK(24) }, /* RFC5737 Documentation (TEST-NET-2) */
+-	{ IP(203,   0, 113, 0), MSK(24) }, /* RFC5737 Documentation (TEST-NET-3) */
+-	{ IP(224,   0,   0, 0), MSK( 4) }, /* RFC1112 Multicast */
+-	{ IP(240,   0,   0, 0), MSK( 4) }, /* RFC1112 Reserved for Future Use + RFC919 Limited Broadcast */
+ };
+ #undef IP
+ #undef MSK
\ No newline at end of file